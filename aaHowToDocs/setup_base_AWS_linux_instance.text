#How-To Setup Base WK AWS Linix Instance:
##Purpose
The purpose of this document is to explain how to setup a basic instance
that can be used as an AMI on AWS.  It goes through how to install the 
common Wellkeeper programming languages and packages to prepare a system
for use as an AMI.

Assumptions:
* you already have a basic image installed with the proper user accounts
* you have configured a "wellkeeper" account and it is in the "sudo" group

###Configure a place for Environment settings:
- add a .bash_aliases file (where you will put any needed environment variables such as GO_PATH etc.,)

###Install Development Software and Environment Items:
>Note:
>Listing what is installed with apt-get[^dpkg --get-selections | grep -v deinstall]
>Finding packages for apt-get[^apt search *partial package name*]

####Go Language:
- DO NOT use apt-get to install the go programming language.  Typically the libraries supported by apt-get are older than the most recent version of GO.
- Prerequisites:  
    - sudo apt-get install git
    - sudo apt-get install binutils bison gcc make
    - sudo apt-get install mercurial
- Use the Go Version Manager.
    - to install GVM follow the instructions here: https://github.com/moovweb/gvm
    - also good instructions here: http://www.hostingadvice.com/how-to/install-golang-on-ubuntu/
    - place this in your .bash_aliases file:
    ```
    [[ -s "$HOME/.gvm/scripts/gvm" ]] && source "$HOME/.gvm/scripts/gvm"
    ```
    *Note: check the .bashrc file to make sure the gvm install did not add the above line to the 
        end of that file also.  If so simply comment it out.*
        
    - logoff and logon to run scripts
    - verify by running “gvm version” from command line and you should get something like this:
        - Go Version Manager v1.0.22 installed at /home/wellkeeper/.gvm
- Install the version of go you want:
    - to get a list use ```gvm listall```
    - to install use “gvm install go1.4.2”
    - to verify type “go version”
- configure the go “workspace”
    - mkdir gocode
    - mkdir gocode/bin
    - mkdir gocode/src
    - mkdir gocode/pkg
- add the following to the .bash_aliases file
```
export GOPATH=$HOME/gocode
export GOBIN=$HOME/gocode/bin
export PATH=$PATH:$GOPATH/bin
```

- add the "common" Go libraries
    - go get "github.com/bitly/go-nsq"
    - go get "github.com/lib/pq"
    - go get “git.eclipse.org/gitroot/paho/org.eclipse.paho.mqtt.golang.git"

* * *
####Python Language:
- Nothing special to do for the Python language.  It is installed by default with Ubuntu.
- Install easy-install
    - sudo apt-get install python-setuptools
- Install pip
    - sudo apt-get install python-pip
- Install Libraries:
    - sudo apt-get install build-essential python-dev
    - sudo pip install pynsq
    - sudo pip install redis
    *Note:  May have to install postgreSQL before the following two will work properly. (see below)*
    - sudo apt-get install python-psycopg2
    - sudo apt-get install python-psycopg2-dbg
** need to add Dynamo DB libraries **

* * * 
####Lua Language:
- Lua 5.2 is available via apt-get
    - sudo apt-get install lua5.2
    - sudo apt-get install luarocks
- Install Libraries:
    - NSQ
    - redis
        - sudo luarocks install redis-lua
    - PostgreSQL
        - sudo luarocks install luadbi
        - sudo luarocks install luadbi-postgresql

* * * 
####Redis and Tools:
- sudo apt-get install redis-server
- sudo apt-get install redis-tools

* * * 
####PostgreSQL and Tools:
- sudo apt-get install postgresql
- sudo /etc/init.d/postgresql stop
- sudo apt-get install postgresql-client

* * * 
####Supervisord:
- Although there is a distribution package for “supervisor” it is typically very out of date.  We should probably install the most current at the time of building the image using pip.
- sudo pip install supervisor --pre


